// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/pb/calculator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	First                int64    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               int64    `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirst() int64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *SumRequest) GetSecond() int64 {
	if m != nil {
		return m.Second
	}
	return 0
}

type SumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimesRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimesRequest) Reset()         { *m = PrimesRequest{} }
func (m *PrimesRequest) String() string { return proto.CompactTextString(m) }
func (*PrimesRequest) ProtoMessage()    {}
func (*PrimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{2}
}

func (m *PrimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimesRequest.Unmarshal(m, b)
}
func (m *PrimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimesRequest.Marshal(b, m, deterministic)
}
func (m *PrimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimesRequest.Merge(m, src)
}
func (m *PrimesRequest) XXX_Size() int {
	return xxx_messageInfo_PrimesRequest.Size(m)
}
func (m *PrimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimesRequest proto.InternalMessageInfo

func (m *PrimesRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimesResponse struct {
	Prime                int64    `protobuf:"varint,1,opt,name=prime,proto3" json:"prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimesResponse) Reset()         { *m = PrimesResponse{} }
func (m *PrimesResponse) String() string { return proto.CompactTextString(m) }
func (*PrimesResponse) ProtoMessage()    {}
func (*PrimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{3}
}

func (m *PrimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimesResponse.Unmarshal(m, b)
}
func (m *PrimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimesResponse.Marshal(b, m, deterministic)
}
func (m *PrimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimesResponse.Merge(m, src)
}
func (m *PrimesResponse) XXX_Size() int {
	return xxx_messageInfo_PrimesResponse.Size(m)
}
func (m *PrimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimesResponse proto.InternalMessageInfo

func (m *PrimesResponse) GetPrime() int64 {
	if m != nil {
		return m.Prime
	}
	return 0
}

type AverageRequest struct {
	Number               float32  `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{4}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNumber() float32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AverageResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{5}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MaximumRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumRequest) Reset()         { *m = MaximumRequest{} }
func (m *MaximumRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumRequest) ProtoMessage()    {}
func (*MaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{6}
}

func (m *MaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumRequest.Unmarshal(m, b)
}
func (m *MaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumRequest.Marshal(b, m, deterministic)
}
func (m *MaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumRequest.Merge(m, src)
}
func (m *MaximumRequest) XXX_Size() int {
	return xxx_messageInfo_MaximumRequest.Size(m)
}
func (m *MaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumRequest proto.InternalMessageInfo

func (m *MaximumRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MaximumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumResponse) Reset()         { *m = MaximumResponse{} }
func (m *MaximumResponse) String() string { return proto.CompactTextString(m) }
func (*MaximumResponse) ProtoMessage()    {}
func (*MaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{7}
}

func (m *MaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumResponse.Unmarshal(m, b)
}
func (m *MaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumResponse.Marshal(b, m, deterministic)
}
func (m *MaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumResponse.Merge(m, src)
}
func (m *MaximumResponse) XXX_Size() int {
	return xxx_messageInfo_MaximumResponse.Size(m)
}
func (m *MaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumResponse proto.InternalMessageInfo

func (m *MaximumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type SquareRootRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{8}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{9}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PrimesRequest)(nil), "calculator.PrimesRequest")
	proto.RegisterType((*PrimesResponse)(nil), "calculator.PrimesResponse")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
	proto.RegisterType((*MaximumRequest)(nil), "calculator.MaximumRequest")
	proto.RegisterType((*MaximumResponse)(nil), "calculator.MaximumResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() { proto.RegisterFile("calculator/pb/calculator.proto", fileDescriptor_97762fb4fc613a37) }

var fileDescriptor_97762fb4fc613a37 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xff, 0xed, 0xfe, 0xeb, 0xe0, 0x8a, 0x1b, 0xbb, 0x8c, 0x39, 0x2b, 0x0e, 0x09, 0xa8,
	0x1d, 0xca, 0x36, 0xf4, 0x45, 0x7c, 0xd3, 0x81, 0xf8, 0x32, 0x90, 0xf5, 0xcd, 0xb7, 0xb6, 0x46,
	0x29, 0xac, 0x4b, 0x97, 0x34, 0xc3, 0xef, 0xed, 0x17, 0x90, 0xb5, 0x4d, 0xdb, 0xcc, 0x8e, 0x3d,
	0x9e, 0x7b, 0x4f, 0x7e, 0xb9, 0xb9, 0x87, 0xc0, 0x30, 0xf0, 0x96, 0x81, 0x5c, 0x7a, 0x09, 0xe3,
	0x93, 0xd8, 0x9f, 0x94, 0x6a, 0x1c, 0x73, 0x96, 0x30, 0x84, 0xb2, 0x42, 0x1e, 0x01, 0x5c, 0x19,
	0x2d, 0xe8, 0x5a, 0x52, 0x91, 0x60, 0x0f, 0x9a, 0x9f, 0x21, 0x17, 0xc9, 0xc0, 0xb8, 0x30, 0x9c,
	0xc6, 0x22, 0x13, 0xd8, 0x07, 0x4b, 0xd0, 0x80, 0xad, 0x3e, 0x06, 0x66, 0x5a, 0xce, 0x15, 0xb9,
	0x84, 0xa3, 0xf4, 0xac, 0x88, 0xd9, 0x4a, 0xd0, 0xad, 0x8d, 0x53, 0x21, 0x97, 0xea, 0x74, 0xae,
	0xc8, 0x35, 0x1c, 0xbf, 0xf1, 0x30, 0xa2, 0x42, 0xdd, 0xd2, 0x07, 0x6b, 0x25, 0x23, 0x9f, 0x72,
	0x65, 0xcc, 0x14, 0xb9, 0x82, 0xb6, 0x32, 0xe6, 0xc8, 0x1e, 0x34, 0xe3, 0x6d, 0x45, 0xcd, 0x93,
	0x0a, 0xe2, 0x40, 0xfb, 0x69, 0x43, 0xb9, 0xf7, 0x45, 0xeb, 0x89, 0x66, 0x41, 0x1c, 0x41, 0xa7,
	0x70, 0xd6, 0x4e, 0x69, 0x16, 0x53, 0x3a, 0xd0, 0x9e, 0x7b, 0xdf, 0x61, 0x54, 0x2e, 0x63, 0xdf,
	0x98, 0x23, 0xe8, 0x14, 0xce, 0x03, 0x4f, 0xbf, 0x81, 0xae, 0xbb, 0x96, 0x1e, 0xa7, 0x0b, 0xc6,
	0x92, 0x43, 0xdc, 0x5b, 0xc0, 0xaa, 0xb9, 0x16, 0x6d, 0x28, 0xf4, 0xdd, 0x8f, 0x09, 0xdd, 0x59,
	0x91, 0xa3, 0x4b, 0xf9, 0x26, 0x0c, 0x28, 0x3e, 0x40, 0xc3, 0x95, 0x11, 0xf6, 0xc7, 0x95, 0xd0,
	0xcb, 0x7c, 0xed, 0x93, 0x3f, 0xf5, 0xec, 0x16, 0xf2, 0x0f, 0x67, 0x60, 0x65, 0xcb, 0xc7, 0xd3,
	0xaa, 0x49, 0x4b, 0xce, 0xb6, 0xeb, 0x5a, 0x0a, 0x31, 0x35, 0xf0, 0x05, 0x5a, 0xf9, 0xbe, 0x51,
	0xb3, 0xea, 0x71, 0xd9, 0x67, 0xb5, 0x3d, 0xc5, 0x71, 0x0c, 0x7c, 0x85, 0x56, 0xbe, 0x62, 0x9d,
	0xa3, 0x27, 0xa4, 0x73, 0x76, 0x32, 0xd9, 0x72, 0xa6, 0x06, 0xce, 0x01, 0xca, 0xa5, 0xe2, 0xb9,
	0xf6, 0xfe, 0xdd, 0x64, 0xec, 0xe1, 0xbe, 0xb6, 0x42, 0x3e, 0xff, 0x7f, 0x37, 0x63, 0xdf, 0xb7,
	0xd2, 0x7f, 0x74, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x08, 0xbd, 0x98, 0x69, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server Streaming
	Primes(ctx context.Context, in *PrimesRequest, opts ...grpc.CallOption) (CalculatorService_PrimesClient, error)
	// Client Streaming
	Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error)
	// BiDi Streaming
	Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error)
	// Error handling. Throws INVALID_ARGUMENT exception when number is negative
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) Primes(ctx context.Context, in *PrimesRequest, opts ...grpc.CallOption) (CalculatorService_PrimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/Primes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimesClient interface {
	Recv() (*PrimesResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimesClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimesClient) Recv() (*PrimesResponse, error) {
	m := new(PrimesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceAverageClient{stream}
	return x, nil
}

type CalculatorService_AverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type calculatorServiceAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/Maximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceMaximumClient{stream}
	return x, nil
}

type CalculatorService_MaximumClient interface {
	Send(*MaximumRequest) error
	Recv() (*MaximumResponse, error)
	grpc.ClientStream
}

type calculatorServiceMaximumClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceMaximumClient) Send(m *MaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceMaximumClient) Recv() (*MaximumResponse, error) {
	m := new(MaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// Server Streaming
	Primes(*PrimesRequest, CalculatorService_PrimesServer) error
	// Client Streaming
	Average(CalculatorService_AverageServer) error
	// BiDi Streaming
	Maximum(CalculatorService_MaximumServer) error
	// Error handling. Throws INVALID_ARGUMENT exception when number is negative
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) Primes(req *PrimesRequest, srv CalculatorService_PrimesServer) error {
	return status.Errorf(codes.Unimplemented, "method Primes not implemented")
}
func (*UnimplementedCalculatorServiceServer) Average(srv CalculatorService_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedCalculatorServiceServer) Maximum(srv CalculatorService_MaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method Maximum not implemented")
}
func (*UnimplementedCalculatorServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_Primes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).Primes(m, &calculatorServicePrimesServer{stream})
}

type CalculatorService_PrimesServer interface {
	Send(*PrimesResponse) error
	grpc.ServerStream
}

type calculatorServicePrimesServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimesServer) Send(m *PrimesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Average(&calculatorServiceAverageServer{stream})
}

type CalculatorService_AverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type calculatorServiceAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_Maximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Maximum(&calculatorServiceMaximumServer{stream})
}

type CalculatorService_MaximumServer interface {
	Send(*MaximumResponse) error
	Recv() (*MaximumRequest, error)
	grpc.ServerStream
}

type calculatorServiceMaximumServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceMaximumServer) Send(m *MaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceMaximumServer) Recv() (*MaximumRequest, error) {
	m := new(MaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Primes",
			Handler:       _CalculatorService_Primes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _CalculatorService_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Maximum",
			Handler:       _CalculatorService_Maximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/pb/calculator.proto",
}
